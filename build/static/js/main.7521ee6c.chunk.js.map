{"version":3,"sources":["components/card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/hello.js","components/footer.js","containers/App.js","reportWebVitals.js","index.js"],"names":["card","name","email","id","className","alt","src","CardList","robots","cardsArray","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","hello","this","greeting","Component","footer","social","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"2QAiBeA,EAdD,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC1B,OAEI,cADJ,CACI,OAAKC,UAAU,uDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,mCAA8BH,EAA9B,cAErB,gCACI,6BAAKF,IACL,4BAAIC,WCILK,EAZE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACVC,EAAaD,EAAOE,KAAI,SAACC,EAAMC,GACjC,OAAO,cAAC,EAAD,CAAMT,GAAIK,EAAOI,GAAGT,GAAIF,KAAMO,EAAOI,GAAGX,KAAMC,MAAOM,EAAOI,GAAGV,WAE9E,OACI,8BACKO,KCMMI,EAbG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAChC,OACE,qBAAKX,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVY,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCHI,EARA,SAACC,GACd,OACE,qBAAKC,MAAO,CAAEC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACGJ,EAAMK,YCWEC,G,6KAXP,OACI,sBAAKtB,UAAU,QAAQD,GAAG,QAA1B,UACC,6CACA,4BAAIwB,KAAKP,MAAMQ,kB,GALRC,cCcLC,G,6KATP,OACI,sBAAK1B,UAAU,QAAQD,GAAG,SAA1B,UACA,mDACA,4BAAIwB,KAAKP,MAAMW,gB,GALNF,cC0CNG,G,wDAvCb,aAAe,IAAD,8BACZ,gBAaFC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAErB,YAAaoB,EAAME,OAAOC,SAb1C,EAAKC,MAAQ,CACX9B,OAAQ,GACRM,YAAa,IAJH,E,gEAQO,IAAD,OAClByB,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAU,EAAKR,SAAS,CAAE3B,OAAQmC,S,+BAOlC,IAAD,EACyBhB,KAAKW,MAA7B9B,EADD,EACCA,OAAQM,EADT,EACSA,YACV8B,EAAiBpC,EAAOqC,QAAO,SAAAC,GACnC,OAAOA,EAAM7C,KAAK8C,cAAcC,SAASlC,EAAYiC,kBAEvD,OAAQvC,EAAOyC,OAGX,sBAAK7C,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWW,aAAcY,KAAKM,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,CAAUzB,OAAQoC,MAEpB,cAAC,EAAD,IACA,cAAC,EAAD,OATJ,6C,GAzBYf,cCIHqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCSdO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SACjDX,M","file":"static/js/main.7521ee6c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst card =  ({ name, email, id }) => {\r\n    return (\r\n    //only one div here\r\n        <div className='tc bg-light-green dib br3  pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='robots' src={`https://robohash.org/test${id}?200*200`} />\r\n            {/* src has template string ` ` to randomize the robots */}\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    }\r\nexport default card;","import React from 'react';\r\nimport Card from './card';\r\n\r\nconst CardList = ({ robots }) => {\r\n    const cardsArray = robots.map((user, i) => {\r\n        return <Card id={robots[i].id} name={robots[i].name} email={robots[i].email}/>\r\n    })\r\nreturn (\r\n    <div>\r\n        {cardsArray}\r\n    </div>\r\n);\r\n    \r\n}\r\n\r\nexport default CardList;\r\n\r\n\r\n// when we want to do a loop, always use map bcos second parameter for map is index","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n  return (\r\n    <div className='pa2'>\r\n      <input\r\n        className='pa3 ba b--green bg-lightest-blue'\r\n        type='search'\r\n        placeholder='search robots'\r\n        onChange={searchChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div style={{ overflow: 'scroll', border: '5px solid black', height: '300px'}}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\nimport './hello.css';\r\n\r\nclass hello extends Component {\r\n    render(){\r\n        return(\r\n            <div className='f1 tc' id='hello' >\r\n             <h1>B YOU TIFUL</h1>\r\n             <p>{this.props.greeting}</p>\r\n             </div>\r\n        );\r\n    }\r\n}\r\n\r\n//if we want another file to use it and want to export only one thing\r\n\r\nexport default hello;\r\n\r\n","import React, { Component } from 'react';\r\nimport './footer.css';\r\n\r\n\r\n\r\n\r\nclass footer extends Component {\r\n    render(){\r\n        return (\r\n            <div className='f3 tc' id='footer'>\r\n            <h4>This is my footer</h4>\r\n            <p>{this.props.social}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default footer;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport Hello from '../components/hello';\r\nimport Footer from '../components/footer';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      robots: [],\r\n      searchfield: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then(response=> response.json())\r\n      .then(users => {this.setState({ robots: users})});\r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchfield: event.target.value })\r\n  }\r\n\r\n  render() {\r\n    const { robots, searchfield } = this.state;\r\n    const filteredRobots = robots.filter(robot =>{\r\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n    })\r\n    return !robots.length ?\r\n      <h1>Loading</h1> :\r\n      (\r\n        <div className='tc'>\r\n          <h1 className='f1'>RoboFriends</h1>\r\n          <SearchBox searchChange={this.onSearchChange}/>\r\n          <Scroll>\r\n            <CardList robots={filteredRobots} />\r\n          </Scroll>\r\n          <Hello />\r\n          <Footer />\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\n// import Hello from './hello';\n// import Card from './card';\n// import CardList from './components/CardList'; \n// import Footer from './footer';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n// import { robots } from './robots';\n//{} => because it is not static meaning can be exported multiple times. if new const in robots.js = cats; { robots, cats }\n\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\nreportWebVitals();\n\n\n\n\n// ReactDOM.render(\n//   <React.StrictMode>\n\n//     {/* <Hello greeting={'Hello' + ' ' + 'React Ninja'}/> */}\n//     <div>\n//     <Card id={robots[0].id} name={robots[0].name} email={robots[0].email}/>\n//     <Card id={robots[1].id} name={robots[1].name} email={robots[1].email}/>\n//     <Card id={robots[2].id} name={robots[2].name} email={robots[2].email}/>\n//     <Footer social={'social icons'}/>\n//     </div>\n//    </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}